package main // 1. package 进行包的声明，建议：包的声明和这个包所在的文件夹同名
import (
	"fmt"
	test "goProject/src/testPackage" // 给包取别名
)

// 2. main包是程序的入口包，一般main函数会放在这个包下

/*
*
1. 使用包的原因
- 我们不可能把所有的函数放在用一个源文件中，可以分门别类的把函数放在不用的源文件中
- 解决同名问题：两个人都想定义一个同名函数，在同一个文件中是不可以定义相同的名字的函数的。此时可以用包来区分

1. package进行包的声明，建议：包的声明这个包和所在的文件夹同名
2. main 包是程序的入口包，main函数一定要放在这个包下
3. 打包语法
package 包名
4. 引入包的语法: import "包的路径"
包名是从$GOPATH/src/后开始计算的，使用/进行路径分隔
5. 如果有多个包，建议一次性导入 格式如下：
import (

	"fmt"
	"goProject/src/package/testPackage"

)
6. 在函数调用的时候前面要定位到所在的包

7. 首字母大写，函数可以被其它包访问
8. 一个目录下不能有重复的函数
9. 包名和文件夹的名字，可以不一样
10. 一个目录下的同级文件归属一个包
11. 包到底是什么
- 在程序层面，所有使用相同 package包名的源文件组成的代码模块
- 在源文件层面就是一个文件夹

12.可以给包取别名，取别名后，原来的包名就不能使用了
*/
func main() {
	fmt.Println("我是package包")
	test.PrintLog() // 可以给包取别名，取别名后，原来的包名就不能使用了
}
